@model test_website.Models.EditExecuterBindingModel

@{
    ViewBag.Title = "EditExecuter";
}

<h2>@Fa.EditExecuter</h2>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MasterId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MasterId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MasterId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">
                <label>@Fa.CollegeName</label>
            </div>
            <div class="col-md-10">
                <select class="form-control college-selection" name="CollegeId">
                    @foreach (var a in ViewBag.College)
                    {
                        <option value="@a.Id" @(a.Id == Model.CollegeId ? "selected" : "")>@a.Name</option>
                    }
                </select>
                @if (ViewBag.ModelState != null && !(ViewBag.ModelState as ModelStateDictionary).IsValidField("CollegeId"))
                {
                    <span class="text-danger field-validation-error"><span>@Fa.RequiredCollegeName</span></span>
                }
            </div>
        </div>

        <div class="row" id="edu">
            <div class="col-md-2">
                <label>@Fa.EducationalGroupName</label>
            </div>
            <div class="col-md-10">
                @Html.Partial("~/views/educationalgroup/educationalgroupofcolleges.cshtml", ViewBag.EducationalGroup as List<test_website.Models.EducationalGroupModel>, new ViewDataDictionary { { "selection", Model.EducationalGroupId } })
                @if (ViewBag.ModelState != null && !(ViewBag.ModelState as ModelStateDictionary).IsValidField("EducationalGroupId"))
                {
                    <span class="text-danger field-validation-error"><span>@Fa.RequiredEducationalGroupName</span></span>
                }
            </div>
        </div>

        <div class="row researchgroups">
            <div class="col-md-2">
                <label>@Fa.ResearchGroupName</label>
            </div>
            @{ 
                    int i = 0;
                    foreach (var a in ViewBag.ExecuterResearchgroup)
                    {
                    <div class="col-md-8">
                        <select class="form-control" name="ResearchGroupIds[@i]">
                             @foreach (var b in ViewBag.ResearchGroup)
                             {
                                <option value="@b.Id" @(b.Id == a.ResearchGroupId ? "selected" : "" )>@b.Name</option>
                             }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="add">-</button>
                    </div>
                  @:</div>
                  @:<div class="row">
                    i = i + 1;

                }
             }
    </div>
        
        <div class="row">
            <div class="col-md-2">
                <label>@Fa.ResearchGroupName</label>
            </div>
            <div class="col-md-2">
                <button type="button" class="add">+</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Explain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Explain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Explain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Fa.Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(".college-selection").change(function () {
                $.get("@Url.Action("educationalgroupofcolleges", "EducationalGroup")", { id: $(this).val() }, function (a) {
                    $("#edu").find('div').last().html(a);
                });
            })


            $('.add').click(function () {
                var row = $(this).closest('.row');
                if (row.find('.researchgroup-selection').length) {
                    if (row.find('.researchgroup-selection').val() != null) {
                        var clone = row.clone();
                        clone.find('.researchgroup-selection').prop('name', 'ResearchGroupIds[' + $('.researchgroup-selection').length + ']')
                        clone.find('.add').text('-').toggleClass('add remove').click(function () {
                            $(this).closest('.row').remove();
                        });
                        clone.find('div').first().remove();
                        clone.insertAfter(row);
                    }
                }
                else
                {
                    $.get("@Url.Action("ResearchGroupSelection","Executer")",null, function (a) {
                        $(a).insertAfter(row.find('div').first());
                    });
                }
            })
        </script>
}
